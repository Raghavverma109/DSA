
647. Palindromic Substrings
Given a string s, return the number of palindromic substrings in it.

A string is a palindrome when it reads the same backward as forward.

A substring is a contiguous sequence of characters within the string.
Example 1:

Input: s = "abc"
Output: 3
Explanation: Three palindromic strings: "a", "b", "c".
Example 2:

Input: s = "aaa"
Output: 6
Explanation: Six palindromic strings: "a", "a", "a", "aa", "aa", "aaa".

Example 3: (my testcase)

Input: s = "noon"
Output: 6
Explanation: Six palindromic strings: "n", "o", "o", "n", "oo", "noon".

.......................................concept.......................................
in MAIN copy
.......................................solution:......................................


class Solution {
public:
    // making a expand_around_index function which return the no. of even or odd palindrome substring.
    int expand_around_index(string s, int i, int j) {
        int count = 0;
        while (i >= 0 && j < s.size() && s[i] == s[j]) {
            count++;
            i--;
            j++;
        }
        return count;
    }

    int countSubstrings(string s) {
        int count = 0;
        int n = s.size();
        for (int i = 0; i < n; i++) {

            // odd palindrome string
            int odd_ka_ans = expand_around_index(
                s, i, i); // parameter is ( string , i , j) => j also to i
            count = count + odd_ka_ans;

            // even palindrome string
            int even_ka_ans = expand_around_index(s, i, i + 1);
            count = count + even_ka_ans;
        }
        return count;
    }
};
