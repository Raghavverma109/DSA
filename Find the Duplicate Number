287. Find the Duplicate Number
Very Short version of the solution with TC=O(N) and SC=O(1):
//1st method

int findDuplicate(vector& nums) {
while(nums[0]!=nums[nums[0]]){ 
swap(nums[0], nums[nums[0]]);
}
return nums[0];
}

//my_code
//2nd method

class Solution {
public:
    int findDuplicate(vector<int>& nums) {
        sort(nums.begin(),nums.end());
        for(int i = 0 ; i<nums.size() ; i++){
            if(nums[i] == nums[i+1]){
                return nums[i];
            }
        }
        return 0;
        
    }
    
};


//3rd method
class Solution {
public:
    int findDuplicate(vector<int>& nums) {
        int index = abs(nums[i]);

        //already visited
        if(nums[i]<0) return index;

        //visited mark
        nums[index]*=-1;
    }
    return 0;
};


